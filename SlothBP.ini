[&01. Common breakpoints]
rtcFileLen(VBself-validation) = kernel32.rtcFileLen
FindFirstFileA(find files) = kernel32.FindFirstFileA
ExitProcess(program exit) = kernel32.ExitProcess
GetStartupInfoA(Get startup information) = kernel32.GetStartupInfoA
GetFileSize(get file size) = kernel32.GetFileSize
VirtualProtect(Vmpshelling) = kernel32.VirtualProtect
ExitWindowsEx(shutdown breakpoint) = kernel32.ExitWindowsEx
CreateFileA(self-validation) = kernel32.CreateFileA
GetVersion(Elang shelling) = kernel32.GetVersion
send(send packet) = ws2_32.send
WSASend(send packet) = ws2_32.WSASend
recv(receive packets) = ws2_32.recv
RtlAdjustPrivilege(Easy Language Quick Shutdown) = ntdll.RtlAdjustPrivilege
SHFormatDrive(gridAPI) = shell32.SHFormatDrive
RemoveDirectoryA(delete the specified directory) = kernel32.RemoveDirectoryA
DeleteFileA(delete the specified file) = kernel32.DeleteFileA

[&02. dialog]
MessageBox(message window) = user32.MessageBox
MessageBoxA = user32.MessageBoxA
MessageBoxW = user32.MessageBoxW
MessageBoxExA = user32.MessageBoxExA
MessageBoxExW = user32.MessageBoxExW
MessageBoxIndirect(Message Box) = user32.MessageBoxIndirect
MessageBoxIndirectA = user32.MessageBoxIndirectA
MessageBoxIndirectW = user32.MessageBoxIndirectW
GetWindowTextA(get control text) = user32.GetWindowTextA
GetWindowTextW = user32.GetWindowTextW
SetWindowTextA(set control title) = user32.SetWindowTextA
GetDlgItemText(get control text) = user32.GetDlgItemText
GetDlgItemTextA = user32.GetDlgItemTextA
GetDlgItemTextW = user32.GetDlgItemTextW
SetDlgItemTextA(set control text) = user32.SetDlgItemTextA
GetDlgItemInt(Get the integer in the control) = user32.GetDlgItemInt
SetDlgItemInt(Set the text in the control) = user32.SetDlgItemInt
SendMessage(message sending) = user32.SendMessage
SendDlgItemMessage(message sending) = user32.SendDlgItemMessage
IsDialogMessageA(send a message) = user32.IsDialogMessageA
IsDialogMessageW = user32.IsDialogMessageW
SendMessageA(send a message) = user32.SendMessageA
DispatchMessageA(send a message) = user32.DispatchMessageA
CallWindowProcA(send a message) = user32.CallWindowProcA
DefWindowProcA(Messages are handled by default) = user32.DefWindowProcA
MessageBeep(system warning sound) = user32.MessageBeep
DrawTextA(Text drawn into rectangle) = user32.DrawTextA
DrawTextExA = user32.DrawTextExA 
DrawTextExW = user32.DrawTextExW
FindWindowA(get window handle) = user32.FindWindowA
GetClipboardData(get clipboard data) = user32.GetClipboardData
CoInitialize(Initialize the com library) = user32.CoInitialize
CoCreateInstance(Build Com object) = user32.CoCreateInstance
LoadIconA(Load icon resource) = user32.LoadIconA
SetWindowLongA(set window properties) = user32.SetWindowLongA
SetWindowTextA(set control text) = user32.SetWindowTextA
ShowWindow(set window display status) = user32.ShowWindow
movewindow(set window position and size) = user32.movewindow
ShowWindow(display window) = user32.ShowWindow
UpdateWindow(update window) = user32.UpdateWindow
CreateWindowExA(build window) = user32.CreateWindowExA
CreateWindow(create window) = user32.CreateWindow
CreateWindowExA = user32.CreateWindowExA
CreateWindowExW = user32.CreateWindowExW
DestroyWindow(destroy window) = user32.DestroyWindow
DialogBox(modal dialog) = user32.DialogBox
EndDialog(clear modal dialog) = user32.EndDialog
DialogBoxParam(modal dialog) = user32.DialogBoxParam
DialogBoxParamA = user32.DialogBoxParamA
DialogBoxParamW = user32.DialogBoxParamW
DialogBoxIndirect(modeling box) = user32.DialogBoxIndirect
DialogBoxIndirectParamA(formwork) = user32.DialogBoxIndirectParamA
DialogBoxIndirectParamW = user32.DialogBoxIndirectParamW
CreateDialog(Modeless dialog) = user32.CreateDialog
CreateDialogParam (Modeless dialog) = user32.CreateDialogParam 
CreateDialogParamA = user32.CreateDialogParamA
CreateDialogIndirect(Modeless dialog) = user32.CreateDialogIndirect
CreateDialogIndirectParam(Unframed) = user32.CreateDialogIndirectParam
CreateDialogIndirectParamA = user32.CreateDialogIndirectParamA
TranslateMessage(message queue) = user32.TranslateMessage
GetMessageA(get message to structure) = user32.GetMessageA
PeekMessageA(Check message to structure) = user32.PeekMessageA

[&03. Functional limitations]
SetMenu(build menu) = user32.SetMenu
DestroyMenu(delete menu) = user32.DestroyMenu
DeleteMenu(delete menu item) = user32.DeleteMenu
EnableMenuItem(Is the menu greyed out?) = user32.EnableMenuItem
EnableWindow(Disable keyboard and mouse input) = user32.EnableWindow

[&04. file handling]
CreateFileA(Create or open a file) = kernel32.CreateFileA
CreateFileW = kernel32.CreateFileW
OpenFile(open a file) = kernel32.OpenFile
ReadFile(read file) = kernel32.ReadFile
WriteFile(write file) = kernel32.WriteFile
GetFileSize(get file size) = kernel32.GetFileSize
FindFirstFileA(find files) = kernel32.FindFirstFileA
GetModuleFileNameA (get file path) = kernel32.GetModuleFileNameA 
OpenFileMappingA(Open file mapping object) = kernel32.OpenFileMappingA
OpenFileMappingW = kernel32.OpenFileMappingW
LoadLibraryA(loadDLL) = kernel32.LoadLibraryA
LoadLibraryW = kernel32.LoadLibraryW
LoadLibraryExA = kernel32.LoadLibraryExA
LoadLibraryExW = kernel32.LoadLibraryExW
CreateFileMappingA(Create file object) = kernel32.CreateFileMappingA
CopyFileA(copy file) = kernel32.CopyFileA
CopyFileW = kernel32.CopyFileW
CopyFileExA = kernel32.CopyFileExA
CopyFileExW = kernel32.CopyFileExW
SetFilePointer(Set the file read and write location) = kernel32.SetFilePointer
MoveFileA(move files) = kernel32.MoveFileA
MoveFileW = kernel32.MoveFileW
MoveFileExA = kernel32.MoveFileExA
MoveFileExW = kernel32.MoveFileExW
DeleteFileA(Delete Files) = kernel32.DeleteFileA
DeleteFileW = kernel32.DeleteFileW
LoadCursorFromFileA(Create a file cursor) = user32.LoadCursorFromFileA
FileOpen(open a file) = kernel32.FileOpen

[&05. inidocument]
GetPrivateProfileStringA(INICommonly used for restart verification) = kernel32.GetPrivateProfileStringA
GetPrivateProfileIntA(initialization file) = kernel32.GetPrivateProfileIntA
GetPrivateProfileStringA(get string) = kernel32.GetPrivateProfileStringA
WritePrivateProfileStringA(set string) = kernel32.WritePrivateProfileStringA

[&06. registry]
RegOpenKeyA(Open registry key) = advapi32.RegOpenKeyA
RegOpenKeyExA(Commonly used for restart verification) = advapi32.RegOpenKeyExA
RegCreateKeyExA = advapi32.RegCreateKeyExA
RegQueryValueExA = advapi32.RegQueryValueExA
RegCreateKeyA(Create new item) = advapi32.RegCreateKeyA
RegCloseKey(Close the registry) = advapi32.RegCloseKey
RegDeleteKeyA(delete key value) = advapi32.RegDeleteKeyA
RegDeleteKeyW = advapi32.RegDeleteKeyW
RegQueryValueA(value) = advapi32.RegQueryValueA
RegEnumKeyExA(enumerate children) = advapi32.RegEnumKeyExA
RegSetValueA(set default value) = advapi32.RegSetValueA
RegSetValueW = advapi32.RegSetValueW
RegSetValueExA(Set the value of the specified item) = advapi32.RegSetValueExA
RegSetValueExW = advapi32.RegSetValueExW

[&07. time processing]
SetSystemTime(set system time) = kernel32.SetSystemTime
TimerProc(Callback) = kernel32.TimerProc
SetLocalTime(set local time) = kernel32.SetLocalTime
GetSystemTime(Load system time) = kernel32.GetSystemTime
GetLocalTime(get local time) = kernel32.GetLocalTime
GetSystemtime (Get system time) = kernel32.GetSystemtime 
GetCurrentTime(Get system time) = kernel32.GetCurrentTime
GetFileTime(get file time) = kernel32.GetFileTime
GetTickCount(The number of milliseconds elapsed since the system started) = kernel32.GetTickCount
CompareFileTime(Compare file times) = kernel32.CompareFileTime
SetTimer(Create a timer) = user32.SetTimer
KillTimer(remove timer) = user32.KillTimer
timeSetEvent(multimedia timer) = winmm.timeSetEvent

[&08. Process function]
CreateThread(create thread) = kernel32.CreateThread
GetModuleHandleA(Get module (instance) handle) = kernel32.GetModuleHandleA
OpenMutexA(open mutex) = kernel32.OpenMutexA
WriteProcessMemory(set memory) = kernel32.WriteProcessMemory
CreateRemoteThread(create thread) = kernel32.CreateRemoteThread
CreateProcessA(create process) = kernel32.CreateProcessA
OpenProcess(get process handle) = kernel32.OpenProcess
ExitProcess(exit process) = kernel32.ExitProcess
ExitThread(terminate the current thread) = kernel32.ExitThread
TerminateProcess(kill a process) = kernel32.TerminateProcess
CreateToolhelp32Snapshot(Get a list of processes) = kernel32.CreateToolhelp32Snapshot
Process32First(get process handle) = kernel32.Process32First
Process32FirstW = kernel32.Process32FirstW
Process32Next(get process handle) = kernel32.Process32Next
Module32Next(get module handle) = kernel32.Module32Next
Module32NextW = kernel32.Module32NextW
Module32First(get module handle) = kernel32.Module32First
Module32FirstW = kernel32.Module32FirstW
Heap32ListFirst(get heap handle) = kernel32.Heap32ListFirst
Heap32ListNext(get heap handle) = kernel32.Heap32ListNext
GetProcessHeap(get heap handle) = kernel32.GetProcessHeap
Heap32First(Get process heap related information) = kernel32.Heap32First
Heap32Next(Get information about the heap) = kernel32.Heap32Next
PostQuitMessage(kill thread) = user32.PostQuitMessage
PostQuitMessageA(kill thread) = user32.PostQuitMessageA
IsDebuggerPresent(Determine if a process is being debugged) = kernel32.IsDebuggerPresent
OpenProcessToken(Get a handle to the process access token) = advapi32.OpenProcessToken
OpenThreadToken = advapi32.OpenThreadToken
ZwQueryInformationProcess = ntdll.ZwQueryInformationProcess

[&09. Disk processing function]
GetDiskFreeSpaceA(Get disk information) = kernel32.GetDiskFreeSpaceA
GetDriveTypeA(Determining Disk Drive Type) = kernel32.GetDriveTypeA
GetLogicalDrives(take drive letter) = kernel32.GetLogicalDrives
GetLogicalDriveStringsA(get the drive path) = kernel32.GetLogicalDriveStringsA
GetLastError(Returns extended error code) = kernel32.GetLastError

[&10. VB5Dedicated breakpoints]
rtcFileLen(VBcheck) = msvbvm60.rtcFileLen

[&11. VB6Dedicated breakpoints]
FindResourceA(VBcheck) = kernel32.FindResourceA
CreateFileA(VBcheck) = kernel32.CreateFileA
GetVolumeInformation(disk volume) = kernel32.GetVolumeInformation
MultiByteToWideChar(ASCII to Unicode) = kernel32.MultiByteToWideChar
WideCharToMultiByte(Unicode to ASCII) = kernel32.WideCharToMultiByte
GetFileSize(Determine file length) = kernel32.GetFileSize
VarCyFromStr(String to Integer) = oleaut32.VarCyFromStr
arBstrFromI2(Integer to String) = oleaut32.arBstrFromI2
rtcFileLen(VBcheck) = msvbvm60.rtcFileLen
rtcFileLength(VBcheck) = msvbvm60.rtcFileLength
rtcMsgBox(Show dialog) = msvbvm60.rtcMsgBox
rtcInputBox(input window) = msvbvm60.rtcInputBox
rtcFileLen = msvbvm60.rtcFileLen
GetMemStr = msvbvm60.GetMemStr
rtcR8ValFromBstr = msvbvm60.rtcR8ValFromBstr
rtcGetPresentDate = msvbvm60.rtcGetPresentDate
rtcBeep = msvbvm60.rtcBeep
rtcTrimBstr(remove spaces from string) = msvbvm60.rtcTrimBstr
rtcMidCharVar(character from string) = msvbvm60.rtcMidCharVar
rtcLeftCharVar(character from left side of string) = msvbvm60.rtcLeftCharVar
rtcRightCharVar(character from right side of string) = msvbvm60.rtcRightCharVar
StrConv(convert string) = msvbvm60.StrConv
rtcT8ValFromBstr(character to float) = msvbvm60.rtcT8ValFromBstr
__vbaI2Str(character to 1 byte value) = msvbvm60.__vbaI2Str
__vbaI4Str(character to 4 byte value) = msvbvm60.__vbaI4Str
__vbar4Str(character to 4 float) = msvbvm60.__vbar4Str
__vbar8Str(character to 8 float) = msvbvm60.__vbar8Str
__vbavaradd(add variable values ) = msvbvm60.__vbavaradd
__vbavarsub(Subtract variable values) = msvbvm60.__vbavarsub
__vbavarmul(Multiplying variable values) = msvbvm60.__vbavarmul
__vbavaridiv(Divide variable value) = msvbvm60.__vbavaridiv
__vbavarxor(variable value heterogeneity) = msvbvm60.__vbavarxor
__vbavarcat (Variable values ​​are linked) = msvbvm60.__vbavarcat 
__vbaStrCat(string concatenation) = msvbvm60.__vbaStrCat
__vbaVarCat(connection string) = msvbvm60.__vbaVarCat
__vbaStrCmp(string comparison) = msvbvm60.__vbaStrCmp
__vbaStrCmp(compare strings) = msvbvm60.__vbaStrCmp
__vbaStrComp(compare strings) = msvbvm60.__vbaStrComp
__vbaVarTstEq(Compare variables) = msvbvm60.__vbaVarTstEq
__vbaFreeStr(copy variable to memory) = msvbvm60.__vbaFreeStr
__vbaStrCopy(character copy to memory) = msvbvm60.__vbaStrCopy
__vbaLenBstr(get the length of the string) = msvbvm60.__vbaLenBstr
__vbavarfornext(loop structure) = msvbvm60.__vbavarfornext
__vbafreeobj(release object) = msvbvm60.__vbafreeobj
__vbastrvarval = msvbvm60.__vbastrvarval
__vbaVarTstNe(VBcheck) = msvbvm60.__vbaVarTstNe
__vbaEnd(VBcheck) = msvbvm60.__vbaEnd
__vbaVarMoves(variable memory move) = msvbvm60.__vbaVarMoves
__vbaStrMove(move string) = msvbvm60.__vbaStrMove
__vbaNew(Show dialog) = msvbvm60.__vbaNew
__vbaNew2(Show dialog) = msvbvm60.__vbaNew2
__vbaEnd = msvbvm60.__vbaEnd
__vbaVarCopy = msvbvm60.__vbaVarCopy
__vbaFileOpen = msvbvm60.__vbaFileOpen
__vbaInputFile = msvbvm60.__vbaInputFile
__vbaWriteFile = msvbvm60.__vbaWriteFile
__vbaStrCompVar = msvbvm60.__vbaStrCompVar
__vbaStrTextCmp = msvbvm60.__vbaStrTextCmp
__vbaFileOpen = msvbvm60.__vbaFileOpen
__vbaInputFile = msvbvm60.__vbaInputFile
__vbaWriteFile = msvbvm60.__vbaWriteFile
__vbaFileClose = msvbvm60.__vbaFileClose
__vbaStrToAnsi(Registry restart verification) = msvbvm60.__vbaStrToAnsi
__vbaFreeStr(Restart verification) = msvbvm60.__vbaFreeStr
__vbaObjSet(grey button) = msvbvm60.__vbaObjSet

[&12. dongle]
LoadLibraryA(loadDLL) = kernel32.LoadLibraryA
LoadLibraryW = kernel32.LoadLibraryW
LoadLibraryExA = kernel32.LoadLibraryExA
LoadLibraryExW = kernel32.LoadLibraryExW
RefreshDeviceList(ponder3) = kernel32.RefreshDeviceList
DeviceIoControl(operating equipment) = kernel32.DeviceIoControl
Prestochangoselector = kernel32.Prestochangoselector
FreeEnvironmentStringsA(free environment string block) = kernel32.FreeEnvironmentStringsA
GetLogicalDriveStringsA(take list) = kernel32.GetLogicalDriveStringsA
GetLogicalDrives(get drive list) = kernel32.GetLogicalDrives
GetDriveTypeA(Determine the drive type) = kernel32.GetDriveTypeA
CreateFileA(Read dog drive) = kernel32.CreateFileA
FindFirstFileA(find files) = kernel32.FindFirstFileA

[&13. Debug virus only]
CreateFileA = kernel32.CreateFileA
LoadLibraryA = kernel32.LoadLibraryA
LoadLibraryW = kernel32.LoadLibraryW
LoadLibraryExA = kernel32.LoadLibraryExA
LoadLibraryExW = kernel32.LoadLibraryExW
CreateThread = kernel32.CreateThread
CreateProcessA = kernel32.CreateProcessA
CreateRemoteThread = kernel32.CreateRemoteThread
WriteProcessMemory = kernel32.WriteProcessMemory
OpenMutexA = kernel32.OpenMutexA
OpenMutexW = kernel32.OpenMutexW
CreateToolhelp32Snapshot = kernel32.CreateToolhelp32Snapshot
Heap32ListFirst = kernel32.Heap32ListFirst
Heap32ListNext = kernel32.Heap32ListNext
Heap32First = kernel32.Heap32First
Heap32Next = kernel32.Heap32Next
Module32First = kernel32.Module32First
Module32Next = kernel32.Module32Next
Module32FirstW = kernel32.Module32FirstW
Module32NextW = kernel32.Module32NextW
Process32First = kernel32.Process32First
Process32Next = kernel32.Process32Next
Process32FirstA = kernel32.Process32FirstA
Process32FirstW = kernel32.Process32FirstW
PostQuitMessage = kernel32.PostQuitMessage
Toolhelp32ReadProcessMemory = kernel32.Toolhelp32ReadProcessMemory
ZwQueryInformationProcess = kernel32.ZwQueryInformationProcess
SetTimer = kernel32.SetTimer
GetTempPathA = kernel32.GetTempPathA
ReadFile = kernel32.ReadFile
WriteFile = kernel32.WriteFile
ShellExecuteA = kernel32.ShellExecuteA
WinExec(call other executables) = kernel32.WinExec
DeleteFileA = kernel32.DeleteFileA
URLDownloadToFileA = kernel32.URLDownloadToFileA

[&14. VC、MFC program reverse]
lstrcmpA(string comparison) = kernel32.lstrcmpA
DefWindowProcA(call default procedure) = user32.DefWindowProcA
DefWindowProcW = user32.DefWindowProcW
RegisterClassA(Register the window class) = user32.RegisterClassA
RegisterClassW = user32.RegisterClassW
RegisterClassExA = user32.RegisterClassExA
RegisterClassExW = user32.RegisterClassExW
FindResourceA(Determine resource location) = kernel32.FindResourceA
FindResourceW = kernel32.FindResourceW
LoadResource(load resource) = kernel32.LoadResource
SetHandleCount(get variable address) = kernel32.SetHandleCount
IsWindowEnabled(Can input keyboard and mouse) = user32.IsWindowEnabled

[&15. Pangolin-specific breakpoints]
CreateThread(3Look forOEP) = kernel32.CreateThread
GetModuleHandleA(magic jump) = kernel32.GetModuleHandleA
OpenMutexA(1The order transfer process is changed twice) = kernel32.OpenMutexA
GetSystemTime(patchKEY) = kernel32.GetSystemTime
VirtualProtect(2EAX returns for 401000) = kernel32.VirtualProtect
CreateFileMappingA(Auxiliary) = kernel32.CreateFileMappingA
GetModuleHandle(Get PE handle) = kernel32.GetModuleHandle

[&16. KEYdocument]
getprivateprofileint = kernel32.getprivateprofileint
GetPrivateProfileInt(get file content) = kernel32.GetPrivateProfileInt
CreateFileA(open a file) = kernel32.CreateFileA
CreateFileW = kernel32.CreateFileW
ReadFile(read from file) = kernel32.ReadFile

[&17. Killing windows and de-validating and others]
FindResourceA(check) = kernel32.FindResourceA
ReadFile(check) = kernel32.ReadFile
WriteFile(check) = kernel32.WriteFile
CreateFile(check) = kernel32.CreateFile
CreateFileA(check) = kernel32.CreateFileA
GetFilesize(file length) = kernel32.GetFilesize
CreateFileA(check) = kernel32.CreateFileA
GetFileSize(check) = kernel32.GetFileSize
GetSystemDirectory(check) = kernel32.GetSystemDirectory
SetFilePointer(check) = kernel32.SetFilePointer
ExitProcess(exit process check) = kernel32.ExitProcess
Terminateprocess(check) = kernel32.Terminateprocess
ExitWindow(check) = kernel32.ExitWindow
ExitWindowsEx(check) = kernel32.ExitWindowsEx
ExitThread(check) = kernel32.ExitThread
sZwSetInformationThread(check) = kernel32.sZwSetInformationThread
GetFileSize(check) = kernel32.GetFileSize
SetFilePointer(check) = kernel32.SetFilePointer
DestroyWindow(kill window) = user32.DestroyWindow
PostQuitMessage(kill window) = user32.PostQuitMessage
mouse_event(mouse interrupt) = kernel32.mouse_event
GetClipboardData(clipboard data) = kernel32.GetClipboardData
ShellExecuteA(web page problem) = kernel32.ShellExecuteA
VirtualFree(Unpack to free up memory) = kernel32.VirtualFree
VirtualAlloc(Unpacking application memory) = kernel32.VirtualAlloc
VirtualProtect(shell protection memory) = kernel32.VirtualProtect
Lockmytask(Blocking the button action has no idea, try it) = kernel32.Lockmytask
GetDlgItem(No idea to break the button) = kernel32.GetDlgItem
GetWindowsDirectoryA(no idea try) = kernel32.GetWindowsDirectoryA
GetFullPathName(no idea try) = kernel32.GetFullPathName
BitBlt(bitmap) = gdi32.BitBlt

[&18. Commonly used comparison breakpoints]
Compare = advapi32.Compare
CompareNoCase = advapi32.CompareNoCase
Collate = advapi32.Collate
lstrcmp = advapi32.lstrcmp
_mbscmp = advapi32._mbscmp
_mbsicmp = advapi32._mbsicmp
_mbscoll = advapi32._mbscoll
_wcsicmp = advapi32._wcsicmp
wcscmp = advapi32.wcscmp
wcscoll = advapi32.wcscoll

[&19. network function]
send(outsourcing) = ws2_32.send
sendto(outsourcing) = ws2_32.sendto
WSASend(outsourcing) = ws2_32.WSASend
WSASendTo(outsourcing) = ws2_32.WSASendTo
recv(Receive data) = ws2_32.recv
inet_addr(ipaddress) = ws2_32.inet_addr
connect(TCPClient connects to server) = ws2_32.connect

[&20. memory operation]
FindWindow(get window handle) = user32.FindWindow
GetWindowThreadProcessId(ID) = user32.GetWindowThreadProcessId
OpenProcess(get process handle) = kernel32.OpenProcess
VirtualAllocEx(request memory) = kernel32.VirtualAllocEx
WriteProcessMemory(write memory) = kernel32.WriteProcessMemory
CreateRemoteThread(create thread) = kernel32.CreateRemoteThread
ReadProcessMemory(read memory) = kernel32.ReadProcessMemory
CreateMutex(create mutex) = kernel32.CreateMutex
GetModuleHandleA(get module handle) = kernel32.GetModuleHandleA
GetProcAddress(Get the function entry address) = kernel32.GetProcAddress
VirtualAlloc(request memory) = kernel32.VirtualAlloc
VirtualFree(free memory) = kernel32.VirtualFree
LoadLibraryA(loadDLL) = kernel32.LoadLibraryA
GetVersion(Get OS version) = kernel32.GetVersion

[&21. Ring3Anti-detection]
GetDesktopWindow(Get the window handle of the desktop) = user32.GetDesktopWindow
